function validaPlaca(objId,cadena){
    var obj=document.getElementById(objId);
    obj.value=cadena.toUpperCase();
    var longitud=obj.value.length;
    var lets="ABCDEFGHIJKLMNOPQRSTUVXWYZ";
    var nums="0123456789";
    var valor;
    var valor2;
    var patron = /^[A-Za-z0-9]+$/i;
    if(!obj.value.search(patron)) {
      if(longitud == 6) {
        var patron = /^\d*$/;
        if(!obj.value.search(patron)) {
          obj.value = "";
        }
      }
      if(longitud>0 && longitud<= 3){
          for(var i=0; i<longitud; i++){
              valor2=obj.value.substring(i,i+1);
              if(lets.indexOf(valor2) == -1){
                  obj.value=obj.value.substring(0,i);
                  break;
              }
          }
      }else if(longitud> 3 && longitud<=5){
          for (var i=3; i<longitud;i++){
              valor=obj.value.substring(i,i+1);
              if(nums.indexOf(valor) == -1){
                  obj.value =obj.value.substring(0,i);
                  break;
              }
          }
      }else if(longitud> 6){
          obj.value =obj.value.substring(0,6);
      }
    } else {
      obj.value = "";
    }
}

function validaCaracteresEspeciales(objId, cadena) {
  var obj=document.getElementById(objId);
  obj.value=cadena.toUpperCase();
  var patron = /^[A-Za-z0-9]+$/i;
  if(obj.value.search(patron)) {
    obj.value = "";
  }
}

function validaObservaciones(objId, cadena) {
  var obj = document.getElementById(objId);
  var longitud = obj.value.length;
  var valida = "#";
  var valor;
  for(var i=0; i<longitud; i++) {
      valor = obj.value.substring(i, i+1);
      if(valida.indexOf(valor) != -1) {
          obj.value = obj.value.substring(0, i);
          break;
      }
  }
}
function validaRemolque(objId,cadena){
    var obj=document.getElementById(objId);
    obj.value=cadena.toUpperCase();
    var lets = "RV";
    var nums = "0123456789";
    var valor;
    var valor2;
    if(obj.value.length >0 && obj.value.length<=1){
        for (var i=0;i<obj.value.length;i++){
            valor2=obj.value.substring(i,i+1);
            if (lets.indexOf(valor2) == -1){
                obj.value = obj.value.substring(0,i);
                break;
            }
        }
    }else if(obj.value.length>1 && obj.value.length<=7){
        for (var i=1;i<obj.value.length;i++){
            valor=obj.value.substring(i,i+1);
            if (nums.indexOf(valor) == -1){
                obj.value = obj.value.substring(0,i);
                break;
            }
        }
    }else if(obj.value.length > 7){
        obj.value =obj.value.substring(0,7);
    }
}
function validarAreaTexto(idTextArea, idContador, maximo) {
        //var variable_anterior                = document.getElementById(idTextArea).value;
        //document.getElementById(idContador).value    = 100 - variable_anterior.length;
        document.getElementById(idContador).value    = 100 - idTextArea.length;
        contadorTexto(idTextArea, idContador, maximo);
}

function limpiarFormulario() {
    for (var i=0;i<document.Forma1.elements.length;i++){
        var e=document.Forma1.elements[i];
        if(e.type !='hidden' && e.type !='button'){
            e.value='';
        }
    }
}

function contarEliminar(){
    var cuantos=0;
    for (var i=0;i<document.Forma1.elements.length;i++){
        var e=document.Forma1.elements[i];
        if(e.name != 'eliminar' && e.checked == true){
            cuantos++;
        }
    }
    return cuantos;
}

function marcarTodos() {
    for(var i=0;i<document.Forma1.elements.length;i++){
        var e=document.Forma1.elements[i];
        if(e.name=="elimina[]"){
            e.checked=document.Forma1.marcaT.checked;
        }
    }
}


function contadorTexto(idTextArea, idContador, maximo){
            //var textArea            = document.getElementById(idTextArea);
            //var variable_anterior = idTextArea;
            var contador            = document.getElementById(idContador);
            var longitud_actual     = idTextArea.value.length;
            var valor_actual        = maximo-longitud_actual;
            if(valor_actual>=0){
                contador.value        = valor_actual;
                //variable_anterior    = idTextArea.value;
            }
            else{
                Sexy.info('Has sobrepasado el límite de caracteres, el límite es: '+maximo);
                //idTextArea.value    = variable_anterior;
            }
}

function validar() {
 for (var i=0;i<document.Forma1.elements.length;i++){
  var e = document.Forma1.elements[i];
  if (e.name == 'clave' || e.name == 'descripcion' || e.name=='nuevaclave1' || e.name=='nuevaclave2'){
   if (!esAlfanumerico(e.value)){
    Sexy.alert('ERROR: El campo ' + e.name + ' debe ser de tipo alfanumérico');
    e.focus();
    return false;
   }        
  }
  if (e.name == 'codigo'){
   if (!esNumerico(e.value)){
    Sexy.alert('ERROR: El campo ' + e.name + ' debe ser de tipo numérico');
    e.focus();
    return false;
   }
  }         
  if (e.name == 'email'){
   if (!valida_email(e.value)){
    Sexy.alert('ERROR: El campo ' + e.name + ' debe ser un email');
    e.focus();
    return false;
   }
  }
 }    
 return true;
}

 function valida_email($email){
    if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test($email)){
     return (false)
    } else {
     return (true);
    }
  }

function esAlfanumerico (s){   
 var i;
 if (estaVacio(s)){ 
  if (esAlfanumerico.arguments.length == 1)
   return false;
  else
   return true;
 }
 for (i = 0; i < s.length; i++){   
   var c = s.charAt(i);
   if (! (esCaracterEspecial(c) || esDigito(c) ) )
    return false;
 }
 return true;
}

function esNumerico(s){   
 var i;
 if (estaVacio(s)){ 
   return false;
 }
 if (!isInteger(s)){
   return false;
 }
 return true;
}

var letrasTilde = "áéíóúÁÉÍÓÚ"

function redireccionar(redireccionar){
    if(undefined!=document.Forma1.boton){
        for(var i=0;i<document.Forma1.boton.length;i++){
            document.Forma1.boton[i].disabled = true;
        }
    }
    document.Forma1.action=redireccionar;
    document.Forma1.submit();
}

function revaluaenter(event)
{
 if (event.keyCode==13){
 if (validar()){document.Forma1.clave.value=calcMD5(document.Forma1.clave.value);redireccionar('index.php');}
 }
}


function restringe_alfanumerico(objId,cadena){
  
  var obj=document.getElementById(objId);
  var longitud=obj.value.length;
  var nums="";
  var valor;
  
  for(var i=0; i<longitud; i++){
      valor=obj.value.substring(i,i+1);
      if(nums.indexOf(valor) != -1){
        obj.value=obj.value.substring(0,i);
        break;
      }
  }
    
} 

function restringe_numerico(objId,cadena){
  
  var obj=document.getElementById(objId);
  var longitud=obj.value.length;
  var nums="0123456789";
  var valor;
  
  for(var i=0; i<longitud; i++){
      valor=obj.value.substring(i,i+1);
      if(nums.indexOf(valor) == -1){
        obj.value=obj.value.substring(0,i);
        break;
      }
  }
    
}


function restringe_sololetras(objId,cadena){
  var obj=document.getElementById(objId);
  var longitud=obj.value.length;
  var nums="ABCDEFGHIJKLMNOPQRSTUVXWYZabcdefghijklmnopqrstuvwxyz ' '";
  var valor;
  
  for(var i=0; i<longitud; i++){
      valor=obj.value.substring(i,i+1);
      if(nums.indexOf(valor) == -1){
        obj.value=obj.value.substring(0,i);
        break;
      }else{
        if(valor == " "){
          
        }
      }
  }
}

function restringe_numerico_sin(event){
  var whichCode = (window.Event) ? event.which : event.keyCode;
  if (!whichCode){
    whichCode = window.event.keyCode
  }
  if (whichCode < 48  || whichCode > 57 || whichCode == 34 || whichCode == 39){
    if (whichCode==8||whichCode==9||whichCode==35||whichCode==36||whichCode==37||whichCode==13||whichCode==38||whichCode==40){
      return true;
    }else{
      return false;
    }
  }
  return true;
}

function estaVacio(s){   
 return ((s == null) || (s.length == 0));
}

function esCaracterEspecial (c){   
 return ( ((c >= "a") && (c <= "z")) || ((c >= "A") && (c <= "Z")) || (c == "ñ") || (c == "Ñ") || (c == ",") || (c == ".") || (c == "/") || (letrasTilde.indexOf(c) > -1));
}

function esDigito (c){   
  return !isNaN(c);
}


function highlightCols(n,c){
   for (var i = 1; i <= c; i++){
     getObject('row'+n+'col'+i).backgroundColor="#CCCCFF";
   }
}
function lowlightCols(n,c){
   for (var i = 1; i <= c; i++){
    getObject('row'+n+'col'+i).backgroundColor="";
   }
}
function getObject(sID) {
  if (document.layers) {
     return document.layers[sID];
  } else if (document.all) {
     return document.all(sID).style;
  } else if (document.getElementById) {
     return document.getElementById(sID).style;
  }
}

function isInteger (s){   
 var i;
 if (isEmpty(s)) 
  if (isInteger.arguments.length == 1) return defaultEmptyOK;
  else return (isInteger.arguments[1] == true);
 for (i = 0; i < s.length; i++){   
   var c = s.charAt(i);
   if (!isDigit(c)) return false;
 }
 return true;
}

function isEmpty(s){   
 return ((s == null) || (s.length == 0))
}

function isDigit (c){   
 return !isNaN(c)
}

function efe_mayusculas(campo){
 campo.value=campo.value.toUpperCase();
}

//FUNCIONES ESPECIALES

/**
The JavaScript functions below will gradually enlarge or shrink an image
on the current page. I use this for mouseover effects, but there might be
some other interesting applications of it as well.

You can use these scripts in any way you'd like, just don't pretend like
you wrote them yourself.

version 1.0
March 17, 2005
Julian Robichaux, http://www.nsftools.com
*/

/**** adjust these two parameters to control how fast or slow
 **** the images grow/shrink ****/
// how many milliseconds we should wait between resizing events
var resizeDelay = 10;
// how many pixels we should grow or shrink by each time we resize
var resizeIncrement = 5;

// this will hold information about the images we're dealing with
var imgCache = new Object();


/**
The getCacheTag function just creates a (hopefully) unique identifier for
each <img> that we resize.
*/
function getCacheTag (imgElement) {
  return imgElement.src + "~" + imgElement.offsetLeft + "~" + imgElement.offsetTop;
}


/**
We're using this as a class to hold information about the <img> elements
that we're manipulating.
*/
function cachedImg (imgElement, increment) {
  this.img = imgElement;
  this.cacheTag = getCacheTag(imgElement);
  this.originalSrc = imgElement.src;
  
  var h = imgElement.height;
  var w = imgElement.width;
  this.originalHeight = h;
  this.originalWidth = w;
  
  increment = (!increment) ? resizeIncrement : increment;
  this.heightIncrement = Math.ceil(Math.min(1, (h / w)) * increment);
  this.widthIncrement = Math.ceil(Math.min(1, (w / h)) * increment);
}


function resizeImg (imgElement, percentChange, newImageURL) {
  // convert the percentage (like 150) to an percentage value we can use
  // for calculations (like 1.5)
  var pct = (percentChange) ? percentChange / 100 : 1;
  
  // if we've already resized this image, it will have a "cacheTag" attribute
  // that should uniquely identify it. If the attribute is missing, create a
  // cacheTag and add the attribute
  var cacheTag = imgElement.getAttribute("cacheTag");
  if (!cacheTag) {
    cacheTag = getCacheTag(imgElement);
    imgElement.setAttribute("cacheTag", cacheTag);
  }
  
  // look for this image in our image cache. If it's not there, create it.
  // If it is there, update the percentage value.
  var cacheVal = imgCache[cacheTag];
  if (!cacheVal) {
    imgCache[cacheTag] = new Array(new cachedImg(imgElement), pct);
  } else {
    cacheVal[1] = pct;
  }
  
  // if we're supposed to be using a rollover image, use it
  if (newImageURL)
    imgElement.src = newImageURL;
  
  // start the resizing loop. It will continue to call itself over and over
  // until the image has been resized to the proper value.
  resizeImgLoop(cacheTag);
  return true;
}


function resizeImgLoop (cacheTag) {
  // get information about the image element from the image cache
  var cacheVal = imgCache[cacheTag];
  if (!cacheVal)
    return false;
  
  var cachedImageObj = cacheVal[0];
  var imgElement = cachedImageObj.img;
  var pct = cacheVal[1];
  var plusMinus = (pct > 1) ? 1 : -1;
  var hinc = plusMinus * cachedImageObj.heightIncrement;
  var vinc = plusMinus * cachedImageObj.widthIncrement;
  var startHeight = cachedImageObj.originalHeight;
  var startWidth = cachedImageObj.originalWidth;
  
  var currentHeight = imgElement.height;
  var currentWidth = imgElement.width;
  var endHeight = Math.round(startHeight * pct);
  var endWidth = Math.round(startWidth * pct);
  
  // if the image is already the right size, we can exit
  if ( (currentHeight == endHeight) || (currentWidth == endWidth) )
    return true;
  
  // increase or decrease the height and width, making sure we don't get
  // larger or smaller than the final size we're supposed to be
  var newHeight = currentHeight + hinc;
  var newWidth = currentWidth + vinc;
  if (pct > 1) {
    if ((newHeight >= endHeight) || (newWidth >= endWidth)) {
      newHeight = endHeight;
      newWidth = endWidth;
    }
  } else {
    if ((newHeight <= endHeight) || (newWidth <= endWidth)) {
      newHeight = endHeight;
      newWidth = endWidth;
    }
  }
  
  // set the image element to the new height and width
  imgElement.height = newHeight;
  imgElement.width = newWidth;
  
  // if we've returned to the original image size, we can restore the
  // original image as well (because we may have been using a rollover
  // image in the original call to resizeImg)
  if ((newHeight == cachedImageObj.originalHeight) || (newWidth == cachedImageObj.originalwidth)) {
    imgElement.src = cachedImageObj.originalSrc;
  }
  
  // shrink or grow again in a few milliseconds
  setTimeout("resizeImgLoop('" + cacheTag + "')", resizeDelay);
}


  

var hex_chr = "0123456789abcdef";
function rhex(num)
{
  str = "";
  for(j = 0; j <= 3; j++)
    str += hex_chr.charAt((num >> (j * 8 + 4)) & 0x0F) +
           hex_chr.charAt((num >> (j * 8)) & 0x0F);
  return str;
}

function str2blks_MD5(str)
{
  nblk = ((str.length + 8) >> 6) + 1;
  blks = new Array(nblk * 16);
  for(i = 0; i < nblk * 16; i++) blks[i] = 0;
  for(i = 0; i < str.length; i++)
    blks[i >> 2] |= str.charCodeAt(i) << ((i % 4) * 8);
  blks[i >> 2] |= 0x80 << ((i % 4) * 8);
  blks[nblk * 16 - 2] = str.length * 8;
  return blks;
}

function add(x, y)
{
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return (msw << 16) | (lsw & 0xFFFF);
}


function rol(num, cnt)
{
  return (num << cnt) | (num >>> (32 - cnt));
}

function cmn(q, a, b, x, s, t)
{
  return add(rol(add(add(a, q), add(x, t)), s), b);
}
function ff(a, b, c, d, x, s, t)
{
  return cmn((b & c) | ((~b) & d), a, b, x, s, t);
}
function gg(a, b, c, d, x, s, t)
{
  return cmn((b & d) | (c & (~d)), a, b, x, s, t);
}
function hh(a, b, c, d, x, s, t)
{
  return cmn(b ^ c ^ d, a, b, x, s, t);
}
function ii(a, b, c, d, x, s, t)
{
  return cmn(c ^ (b | (~d)), a, b, x, s, t);
}

/*
 * Take a string and return the hex representation of its MD5.
 */
function calcMD5(str)
{
  x = str2blks_MD5(str);
  a =  1732584193;
  b = -271733879;
  c = -1732584194;
  d =  271733878;

  for(i = 0; i < x.length; i += 16)
  {
    olda = a;
    oldb = b;
    oldc = c;
    oldd = d;

    a = ff(a, b, c, d, x[i+ 0], 7 , -680876936);
    d = ff(d, a, b, c, x[i+ 1], 12, -389564586);
    c = ff(c, d, a, b, x[i+ 2], 17,  606105819);
    b = ff(b, c, d, a, x[i+ 3], 22, -1044525330);
    a = ff(a, b, c, d, x[i+ 4], 7 , -176418897);
    d = ff(d, a, b, c, x[i+ 5], 12,  1200080426);
    c = ff(c, d, a, b, x[i+ 6], 17, -1473231341);
    b = ff(b, c, d, a, x[i+ 7], 22, -45705983);
    a = ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
    d = ff(d, a, b, c, x[i+ 9], 12, -1958414417);
    c = ff(c, d, a, b, x[i+10], 17, -42063);
    b = ff(b, c, d, a, x[i+11], 22, -1990404162);
    a = ff(a, b, c, d, x[i+12], 7 ,  1804603682);
    d = ff(d, a, b, c, x[i+13], 12, -40341101);
    c = ff(c, d, a, b, x[i+14], 17, -1502002290);
    b = ff(b, c, d, a, x[i+15], 22,  1236535329);    

    a = gg(a, b, c, d, x[i+ 1], 5 , -165796510);
    d = gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
    c = gg(c, d, a, b, x[i+11], 14,  643717713);
    b = gg(b, c, d, a, x[i+ 0], 20, -373897302);
    a = gg(a, b, c, d, x[i+ 5], 5 , -701558691);
    d = gg(d, a, b, c, x[i+10], 9 ,  38016083);
    c = gg(c, d, a, b, x[i+15], 14, -660478335);
    b = gg(b, c, d, a, x[i+ 4], 20, -405537848);
    a = gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
    d = gg(d, a, b, c, x[i+14], 9 , -1019803690);
    c = gg(c, d, a, b, x[i+ 3], 14, -187363961);
    b = gg(b, c, d, a, x[i+ 8], 20,  1163531501);
    a = gg(a, b, c, d, x[i+13], 5 , -1444681467);
    d = gg(d, a, b, c, x[i+ 2], 9 , -51403784);
    c = gg(c, d, a, b, x[i+ 7], 14,  1735328473);
    b = gg(b, c, d, a, x[i+12], 20, -1926607734);
    
    a = hh(a, b, c, d, x[i+ 5], 4 , -378558);
    d = hh(d, a, b, c, x[i+ 8], 11, -2022574463);
    c = hh(c, d, a, b, x[i+11], 16,  1839030562);
    b = hh(b, c, d, a, x[i+14], 23, -35309556);
    a = hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
    d = hh(d, a, b, c, x[i+ 4], 11,  1272893353);
    c = hh(c, d, a, b, x[i+ 7], 16, -155497632);
    b = hh(b, c, d, a, x[i+10], 23, -1094730640);
    a = hh(a, b, c, d, x[i+13], 4 ,  681279174);
    d = hh(d, a, b, c, x[i+ 0], 11, -358537222);
    c = hh(c, d, a, b, x[i+ 3], 16, -722521979);
    b = hh(b, c, d, a, x[i+ 6], 23,  76029189);
    a = hh(a, b, c, d, x[i+ 9], 4 , -640364487);
    d = hh(d, a, b, c, x[i+12], 11, -421815835);
    c = hh(c, d, a, b, x[i+15], 16,  530742520);
    b = hh(b, c, d, a, x[i+ 2], 23, -995338651);

    a = ii(a, b, c, d, x[i+ 0], 6 , -198630844);
    d = ii(d, a, b, c, x[i+ 7], 10,  1126891415);
    c = ii(c, d, a, b, x[i+14], 15, -1416354905);
    b = ii(b, c, d, a, x[i+ 5], 21, -57434055);
    a = ii(a, b, c, d, x[i+12], 6 ,  1700485571);
    d = ii(d, a, b, c, x[i+ 3], 10, -1894986606);
    c = ii(c, d, a, b, x[i+10], 15, -1051523);
    b = ii(b, c, d, a, x[i+ 1], 21, -2054922799);
    a = ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
    d = ii(d, a, b, c, x[i+15], 10, -30611744);
    c = ii(c, d, a, b, x[i+ 6], 15, -1560198380);
    b = ii(b, c, d, a, x[i+13], 21,  1309151649);
    a = ii(a, b, c, d, x[i+ 4], 6 , -145523070);
    d = ii(d, a, b, c, x[i+11], 10, -1120210379);
    c = ii(c, d, a, b, x[i+ 2], 15,  718787259);
    b = ii(b, c, d, a, x[i+ 9], 21, -343485551);

    a = add(a, olda);
    b = add(b, oldb);
    c = add(c, oldc);
    d = add(d, oldd);
  }
  return rhex(a) + rhex(b) + rhex(c) + rhex(d);
}


 /*
function IsNumeric(valor)
{
var log=valor.length;var sw="S";
for (x=0; x<log; x++)
{v1=valor.substr(x,1);
v2 = parseInt(v1);
//Compruebo si es un valor numérico
if (isNaN(v2)) {sw= "N";}
}
if (sw=="S") {return true;} else {return false;}
}*/
function IsNumeric(valor){
    var log=valor.length;
    var sw="S";
    for (x=0; x<log; x++){
        v1=valor.substr(x,1);
        v2 = parseInt(v1);
        //Compruebo si es un valor numérico
        if (isNaN(v2)){
            sw= "N";
        }
    }
    if (sw=="S"){
        return true;
    }
    else{
        return false;
    }
}



var primerslap=false;
var segundoslap=false;
function formateafecha(fecha){
    var lon= fecha.length;
    var dia;
    var mes;
    var ano;
    ano=fecha.substr(0,4);
    if((lon>=4) && (primerslap==false)){
        ano=fecha.substr(0,4);
        //alert("akii" + ano);
        if ((IsNumeric(ano)== false) || ((ano==0) || (ano<1900) || (ano>2100))){
            fecha=""; primerslap=false;
        }else{
            fecha=fecha.substr(0,4)+"-"+fecha.substr(5,9); primerslap=true;
        }
    }else{
        ano=fecha.substr(0,4);
        if(IsNumeric(ano)==false){
            fecha="";
        }
        if((lon<=4) && (primerslap=true)){
            fecha=fecha.substr(0,4); primerslap=false;
        }
    }// fin if ((long>=4) && (primerslap==false))
    if((lon>=7) && (segundoslap==false)){
        mes=fecha.substr(5,2);
        if((IsNumeric(mes)==true) &&(mes<=12) && (mes!="00")){
            fecha=fecha.substr(0,7)+"-"+fecha.substr(8,2); segundoslap=true;
        }else{
            fecha=fecha.substr(0,5); segundoslap=false;
        }
    }else{
        if ((lon<=7) && (segundoslap=true)){
            fecha=fecha.substr(0,6); segundoslap=false;
        }
    }//if ((long>=7) && (segundoslap==false))
    if (lon>=9){
        dia=fecha.substr(8,5);
        if (IsNumeric(dia)==false){
            fecha=fecha.substr(0,8);
        }else{
            if (lon==10){
                if ((dia >31) || (dia=="00")){
                    fecha=fecha.substr(0,8);
                }
            }
        }
    } //if (long>=7)
    if (lon>=10){
        fecha=fecha.substr(0,10);
        dia=fecha.substr(8,2);
        mes=fecha.substr(5,2);
        ano=fecha.substr(0,4);
        // A?o no biciesto y es febrero y el dia es mayor a 28
        //alert(mes);
        if((ano%4 != 0) && (mes ==02) && (dia > 28) ){// es a?o biciesto
            fecha=fecha.substr(0,4)+"-";
        }
    }
    return (fecha);
}



function zero_fill(i_valor, num_ceros) {
 relleno = ""
 i = 1
 salir = 0
 while ( ! salir ) {
  total_caracteres = i_valor.length + i
  if ( i > num_ceros || total_caracteres > num_ceros )
   salir = 1
  else
   relleno = relleno + "0"
   i++
  }
  i_valor = relleno + i_valor
  return i_valor
}

function calcularDV(i_rut) {
 var pesos = new Array(71,67,59,53,47,43,41,37,29,23,19,17,13,7,3);
 rut_fmt = zero_fill(i_rut, 15)
 suma = 0
 for ( i=0; i<=14; i++ )
  suma += rut_fmt.substring(i, i+1) * pesos[i]
  resto = suma % 11
  if ( resto == 0 || resto == 1 )
   digitov = resto
  else
   digitov = 11 - resto
 return(digitov)
}

function calcularDVContenedores(letras, numeros, digito) {
 var  $aLetras = new Array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z');
 var pesos = new Array(10,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38);
 letras = zero_fill(letras, 4)
 suma = 0
 for ( i=0; i<4; i++ ){
     for ( val=0; val<26; val++ ){
         if (letras.substring(i,i+1)==$aLetras[val]){
             break;
         }
     }
     suma=suma+(pesos[val]*Math.pow(2,i));
 }
 numeros = zero_fill(numeros, 6)
 for ( i=0; i<6; i++ ){
   val=numeros.substring(i, i+1);
   suma=suma+(val*Math.pow(2,i+4));
 }
 resto = suma % 11
 digitov=resto;
 if ( resto == 10 || resto == 0 ){
   digitov = 0;
 }
 if ( resto == 9 || resto == 1 ){
   digitov = 1;
 }
 return(digitov);
}






var patron2 = new Array(2,2);
function validaHoraMilitar(elem,separador,pat,numerico){
    if(elem.valoranterior != elem.value){
        valor=elem.value;
        largo=valor.length;
        valor=valor.split(separador);
        valor2="";

        for(i=0; i<valor.length; i++){
            valor2+= valor[i];
        }

        if(numerico){
            for(j=0; j<valor2.length; j++){
                if(isNaN(valor2.charAt(j))){
                    letra=new RegExp(valor2.charAt(j),"g");
                    valor2=valor2.replace(letra,"");
                }
            }
        }

        valor = "";
        valor3=new Array();
        for(n=0; n<pat.length; n++) {
            valor3[n]=valor2.substring(0,pat[n]);
            valor2=valor2.substr(pat[n]);
        }
        for(q=0; q<valor3.length; q++) {
            if(q==0) {
                if (valor3[0]>23) {
                    valor="";
                }else{
                    valor=valor3[q];
                }
            }else{
                if(valor3[q]!=""){
                    if(valor3[1]>59) {
                        valor=valor3[0]+":59";
                    }else{
                        valor+=separador+valor3[q];
                    }
                }
            }
        }
        elem.value=valor;
        elem.valoranterior=valor;
    }
}



function validarContenedores(letras, numeros, digito) {
 var  $aLetras = new Array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z');
 var pesos = new Array(10,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38);
 letras = zero_fill(letras, 4);
 suma = 0;
 for ( i=0; i<4; i++ ){
     for ( val=0; val<26; val++ ){
         if (letras.substring(i,i+1)==$aLetras[val]){
             break;
         }
     }
     suma=suma+(pesos[val]*Math.pow(2,i));
 }
 numeros = zero_fill(numeros, 6)
 for ( i=0; i<6; i++ ){
   val=numeros.substring(i, i+1);
   suma=suma+(val*Math.pow(2,i+4));
 }
 resto = suma % 11
 digitov=resto;
 if ( resto == 10 || resto == 0 ){
   digitov = 0;
 }
 if ( resto == 9 || resto == 1 ){
   digitov = 1;
 }
 return(digitov);
}